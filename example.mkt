

import test_import as ti; // do not start with . for standard libraries
import .sub_directory.library_file; // start import with a . to denote that it is in a sub directory \n

echo \
test \
hi \
what;

test1 = 2; test2 = 3; test3 = 4; echo


/* This is an example program in the new language */
public class Main{

    float test1 = 2.3;
    * test2 = 3;
    float* test2 = 4.5;
    ** test2 = "hello/*test*/ // \n"; // infer type and assign dynamic length
    

    use System.out.println;
    use ti.testFunc;
    use sub_directory.library_file.*;
    
    /**
     * Probably use Java's doc string method.
     */
    public void main(String[] args){
        System.out.println("Hello, World!");

        // perform unit tests
        $main(NULL);
        
    } $ {
        // perform tests for the entire class

        println("Testing test function");
        if $test(1, 3) {
            println("Test passed!");
        } else {
            println("Test failed!");
        }

        $testFunc();
        
    } @ {
        This section of the program should contain usage information.
        It does not even need to be in comments.
        This is to make it easier for IDEs to show developers how to use the program.
        The developer can also print this information by using
        
        Main.@main()
    }


    public int test(int | float arg1, double* arg2){
        if arg1.type() == int{
            System.out.println("arg1 is an int");
        }

        try {
            1 = 1;
        } catch {
            System.out.println();
        }
        
    } $ { // use $ and open a new context at end of function to create unit tests
        
        println("Testing the new function!");
        
        return true;
    }

    // you can overload functions based on their arguments
    public int test(double arg1, double arg2 = 5.3){
        println("This function is overloaded");
    } $ {
        println("This is another test!");
        return true;
    }

}

